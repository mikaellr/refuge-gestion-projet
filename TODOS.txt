/ à la base des urls = http://localhost:8080/refuge/
/ à la base des jsps = refuge/src/main/webapp/WEB_INF/jsp/

Remarques : 
- (?) à fixer 
- employer systématiquement <c:url value=""/> pour les urls internes au site dans les jsp
- utiliser webjars pour charger bootstrap et jquery (?)
- utiliser include-prelude/include-coda dans le web.xml pour la mise en page (?)



Partie publique / visiteurs :
=============================

Recherche et visualisation animaux :
------------------------------------
                
/animals?[species=<species-id>][&race=<race-id>][&page=<page>]
be.iepscf.refuge.business.servlet.AnimalsServlet
    doGet       résultat de recherche d'animaux 
                - si le temps : prévoir pagination (d'où [&page=<page>] ) !!!!!!!!!!!!!!!
                (connaîtres nombre enregistrement si lien "dernière page" : méthode DAO nécessaire)

Partie employés / gestion :
===========================

/gestion/
    be.iepscf.refuge.business.servlet.gestion.IndexServlet
    doGet :     page d'accueil des employés du site
                - lien vers ajouter animal
                - liens vers gestion demandesz contact (/gestion/contactrequests)
                - liens vers gestion users (/gestion/users/)
                jsp : /gestion/index.jsp


Gestion utilisateurs :
----------------------
                
/gestion/users/
    be.iepscf.refuge.business.servlet.gestion.UsersServlet
    doGet       liste des utilisateurs
                (?) affichage séparé des activés/désactivés (le tri peut ne se faire que dans la couche métier pour ne pas ajouter une requête à écrire)
                jsp : /gestion/users.jsp


Gestion animaux :
-----------------
        
/gestion/animals (?)
    be.iepscf.refuge.business.servlet.gestion.AnimalsServlet
    doGet       liste animaux
                - liens vers /gestion/animal?id=<id>
                (?) nécessaire ? 
                (?) présent sur la photo de la liste établie en classe, mais doublon de /animals
                jsp : /gestion/animals.jsp

/gestion/animal?id=<id>
    be.iepscf.refuge.business.servlet.gestion.AnimalServlet
    doGet       fiche d'édition d'un animal
                jsp : /gestion/animal.jsp
    doPost      enregistrement des modifications
                message de confirmation
                retour fiche animl, ou liste animaux, ou message confirmation

/gestion/animal-add
    be.iepscf.refuge.business.servlet.gestion.AnimalAddServlet
    doGet       formulaire d'ajout
                jsp : /gestion/animal-add.jsp
    doPost      ajout animal

Gestion contact requests :
--------------------------

/gestion/contact-requests
    be.iepscf.refuge.business.servlet.gestion.ContactRequestsServlet
    doGet       liste des demandes de contact
                - lien pour chaque demande vers /gestion/contact-request?id=<contactrequest-id>
                - faire en sorte qu'on voit si plusieurs demandes pour un animal
                jsp : /gestion/contact-requests.jsp

/gestion/contact-request?id=<contactrequest-id>
    be.iepscf.refuge.business.servlet.gestion.ContactRequestServlet
    doGet       afficher la demande
                - afficher lien vers fiche animal (/animal?id et/ou vers /gestion/animal?id=<id>)
                - faire en sorte qu'on voit si plusieurs demandes pour un animal
                jsp : /gestion/contact-request.jsp
    doPost      marquer la demande comme traitée




API Rest (couche persistence :
==============================


Resource User :
---------------

/rest/users
    GET         liste users 
                (?) actifs et inactifs ? les séparer à l'affichage dans la couche business ?
    POST        insert user
/rest/users/<id>
    GET         get user #id
    PUT         update user #id 
                (full update, y compris pour activer/désactiver, par simplicité)
    DELETE      delete user #id 
                (déjà fait pour tester, mais inutile, puisqu'on n'efface pas, on désactive)



Resource Animal :
----------------

/rest/animals[?species=<species-id>][&race=<race-id>][&offset=<offset>][&limit=<limit>[&last=false][&adoptable=false][&all=true]
    GET         liste animaux
                valeurs par défaut (si paramètre non présent dans la requête) :
                - default species = null (tous les animaux)
                - default race = null (tous les animaux de l'espèce)
                - default offset = 0
                - default limit = 20
                - default last = true (les derniers animaux en premiers, triés sur l'id car on n'a rien d'autre...)
                - defaut adoptable = true 
                - default all = false (si all = true : ignorer offset et limit, et renvoyer tous les enregistrements correspondants)
    POST        ajout animal
/rest/animals/<id>
    GET         get animal #id
    PUT         update animal #id
                (full update, y compris pour désadopatibiliser (sic), par simplicité)
/rest/animal/<id>/photo
    GET         photo animal #id
/rest/animal/<id>/contact-requests
    GET         contactRequest pour l'animal #id


Resource ContactRequest :
-------------------------

/rest/contact-requests
    GET         "UNTREATED" ContactRequests
    POST        ajout nouveau ContactRequest
/rest/contact-requests/<id>
    GET         get...
    PUT         update...
                (full update, même si seulement utilisé pour marquer "treated")

Autres : 
--------

/rests/species
    GET         liste des espèces pour remplir les select (html)
/rests/species/<id>
    GET         l'objet espèce pour remplir les objets Animal à la création
/rests/species/<id>/races
    GET         liste des races de l'espèce pour remplir les select (html)
/rests/races/<id>
    GET         l'objet race pour remplir les objets Animal à la création
/rests/colors
    GET         liste des couleurs pour remplir les select (html)
/rests/colors/<id>
    GET         l'objet color pour remplir les objets Animal à la création
/rest/roles
    GET         liste des roles (ok, ok) pour remplir les select (html)
/rest/roles/<id>
    GET         l'objet role pour remplir les objets User à la création


